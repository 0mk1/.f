snippet todo "TODO statement" b
# TODO: ${1:statement}
endsnippet

snippet ipdb "ipdb" b
import ipdb; ipdb.set_trace()  # BREAKPOINT
endsnippet

snippet pdb "pdb" b
import pdb; pdb.set_trace()  # BREAKPOINT
endsnippet

snippet doc "simple docstring" b
"""$0"""
endsnippet

snippet def "function" b
def ${1:name}(${2:arg}):
	$3
endsnippet

snippet defm "method" b
def ${1:name}(self, ${2:arg}):
	$3
endsnippet

snippet super "override method"
super().${1:method_name}(${2:args})
endsnippet

snippet api-auth "Api auth url, when JWT is on" b
url(r'^api-auth/', include('rest_framework.urls', namespace='rest_framework')),
endsnippet

snippet fkeyf "Foreign Key Field" b
field_name = models.ForeignKey(
	model,
	verbose_name=_(''),
	related_name='',
	on_delete=models.CASCADE,
)
endsnippet

snippet charf "CharField with choices" b
name = models.CharField(
	_('name'),
	max_length=255,
	choices=CHOICES,
)
endsnippet

snippet boolf "boolean field" b
name = models.BooleanField(
	_('name'),
	default=False,
)
endsnippet

snippet choices "Choices" b
NAME = 'c'
CHOICES = Choices(
	(NAME, _('name')),
)
endsnippet

snippet modelcls "Description" b
class ModelName(TimeStampedModel):
	"""model docstring"""
	class Meta:
		verbose_name = _('')
		verbose_name_plural = _('')

	def __str__(self):
		return self.field
endsnippet

snippet _t "import translation" b
from django.utils.translation import ugettext_lazy as _
endsnippet

snippet settings "" b
from django.conf import settings
endsnippet

snippet noqa ""
  # noqa: E501
endsnippet

snippet get_user_model "" b
from django.contrib.auth import get_user_model
endsnippet

snippet validate "validation" b
    def validate(self, data):
        validated_data = super().validate(data)

        errors = validate_function(validated_data, self.instance)
        if errors:
            raise serializers.ValidationError(errors)

        return validated_data
endsnippet
